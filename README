Программа читает из pcap файла все фреймы, выполняет N итераций вычислений. На каждой итерации
выполняется вычисление контрольных сумм всех TCP сегментов в файле.

Сборка и запуск программы осуществлялись на ОС Ubuntu 14.04.6 LTS с использованием gcc 4.8.5.

Для сборки выполнить:
  $ make
Для удаления результатов сборки:
  $ make clean

Для вызова справки выполните:
  $ ./ip-checksum-test -h

Программа принимает на вход один обязательный агрумент - имя pcap файла и
два необязательных - алгоритм вычисления (ref или amd64) и количество итераций вычислений.

Для выбора алгоритма нужно передать опцию -a и далее указать один из двух вариантов 'ref' или 'amd64'.
Если опцию не передавать, то будет использоваться алгоритм 'ref'.
Алгоритмы(источник: https://blogs.igalia.com/dpino/2018/06/14/fast-checksum-computation/):
  'ref' - базовая (референсная) реализация на C, автор Diego Pino García.
  'amd64' - оптимизированный алгоритм под архитектуру amd64, автор Diego Pino García.

Для выбора количества итераций вычислений нужно передать опцию -n и указать число.
Если опцию не передавать, то будет выполнено 50 итераций.

Например, для выполнения 200 итераций вычислений алгоритмом amd64:
$ ./ip-checksum-test -a amd64 -n 200 dump.pcap
242102000 TCP packets processed in 20.353 s
11895012 TCP packets per second(11362 MiB/s)
0 TCP checksum errors

Для выполнения 200 итераций вычислений алгоритмом ref:
$ ./ip-checksum-test -a ref -n 200 dump.pcap
242102000 TCP packets processed in 28.820 s
8400512 TCP packets per second(8024 MiB/s)
0 TCP checksum errors

При этом программа выводит:
сколько всего TCP сегментов обработано и за какое время в секундах;
сколько TCP сегментов в секунду обработано (сколько обработано Мeби-байт в секунду)
сколько ошибок при подсчете контрольных сумм обнаружено

Примеры выше запускались на компьютере с процессором Intel Core i7-4790 с зафиксированной
частотой 3.6 Ghz и оперативной памятью DDR3 1600Mhz.
